#!/usr/bin/env lua
-- Config section
local ADVERTISE = true -- include a link to the github page of this project, replace "true" with "false" if you don't like it

local args = table.pack(...)

if args.n < 2 then
  io.write([[
Usage:
  ./init.lua <input file> <output file> [-d]
      -d    Enables debug (errors are shown) default: false
      -c    Enables compressing (remove unneeded spaces and newlines) default: false
]])
  os.exit()
end

local file_in = args[1]
local file_out = args[2]
local DEBUG = false
local STRIP = false

args.n = nil
for i, v in pairs(args) do
  v = tostring(v)
  if v:sub(1,1) == "-" then
    if v == "-d" then
      DEBUG = true
    elseif v == "-c" then
      STRIP = true
    end
  else
  end
end

file_in = assert(io.open(file_in, "r"))
file_out = assert(io.open(file_out, "w"))

local input = file_in:read("a")
file_in:close()

local data ='(' ..
tostring(ADVERTISE and "--[[Compiled using LuaMalwareToolkit v2 made by bauen1 https://github.com/bauen1/LuaMalwareToolkit2]]" or "") ..
[[function()local a=%qlocal b,c,s=load(a,'[C]')if b then s,c=pcall(b,a)end if not s then ]] ..
tostring(DEBUG and "error(c)" or "") .. [[end end)()]]

data = string.format(data,string.format([[local args={...};local src=(%q):format(table.remove(args));%s;]], data, input))

if STRIP then
  -- Remove newlines
  data = data:gsub("\\\n", "\n")

  data = data:gsub("[\r\f\n]"," ")

  -- Remove unneeded spaces
  data = data:gsub("(%s+)", " ")
end

file_out:write(data)
print(string.format("Wrote %i bytes", file_out:seek("end")))
file_out:close()
